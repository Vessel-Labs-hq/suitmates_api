import { UpdateUserDto } from './dto/update-user.dto';
import { PrismaService } from 'src/database/prisma.service';
import { RegisterUserDto } from '../auth/dto/register-user.dto';
export declare const roundsOfHashing = 10;
export declare class UserService {
    private prisma;
    constructor(prisma: PrismaService);
    register(userInfo: RegisterUserDto): Promise<{
        id: number;
        email: string;
        first_name: string;
        password: string;
        last_name: string;
        phone_number: string;
        avatar: string;
        bio: string;
        role: string;
        onboarded: boolean;
        verified: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findAll(): Promise<{
        id: number;
        email: string;
        first_name: string;
        password: string;
        last_name: string;
        phone_number: string;
        avatar: string;
        bio: string;
        role: string;
        onboarded: boolean;
        verified: boolean;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    findOne(id: number): Promise<{
        id: number;
        email: string;
        first_name: string;
        password: string;
        last_name: string;
        phone_number: string;
        avatar: string;
        bio: string;
        role: string;
        onboarded: boolean;
        verified: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    update(id: number, updateUserDto: UpdateUserDto): Promise<{
        id: number;
        email: string;
        first_name: string;
        password: string;
        last_name: string;
        phone_number: string;
        avatar: string;
        bio: string;
        role: string;
        onboarded: boolean;
        verified: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    remove(id: number): Promise<{
        id: number;
        email: string;
        first_name: string;
        password: string;
        last_name: string;
        phone_number: string;
        avatar: string;
        bio: string;
        role: string;
        onboarded: boolean;
        verified: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
}
